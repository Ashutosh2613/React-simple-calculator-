{"ast":null,"code":"var _jsxFileName = \"/Users/ashu/Desktop/React Calculator/calculator/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [calc, setCalc] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const ops = ['/', '*', '+', '-', '.'];\n\n  const updateCalc = value => {\n    if (ops.includes(value) && calc === '' || ops.includes(value) && ops.includes(calc.slice(-1))) {\n      return;\n    }\n\n    setCalc(calc + value);\n\n    if (!ops.includes(value)) {\n      setResult(eval(calc + value).toString());\n    }\n  };\n\n  const creatDigits = () => {\n    const digits = [];\n\n    for (let i = 1; i < 10; i++) {\n      digits.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateCalc(i.toString()),\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this));\n    }\n\n    return digits;\n  };\n\n  const calculate = () => {\n    setCalc(eval(calc).toString());\n  };\n\n  const cLEAR = () => {\n    if (calc == \"\") {\n      return;\n    }\n\n    const value = calc.slice(0, -1);\n    setCalc(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: [result ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"(\", result, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 18\n      }, this) : '', calc || \"0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"operators\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateCalc('/'),\n        children: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateCalc('')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateCalc('+'),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateCalc('-'),\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cLEAR,\n        children: \"DEL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"digits\",\n      children: [creatDigits(), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateCalc('0'),\n        children: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateCalc('.'),\n        children: \".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: calculate,\n        children: \"=\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9U/d6CHR7WUh3xAyDzH68Kd1wgs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ashu/Desktop/React Calculator/calculator/src/App.js"],"names":["useState","App","calc","setCalc","result","setResult","ops","updateCalc","value","includes","slice","eval","toString","creatDigits","digits","i","push","calculate","cLEAR"],"mappings":"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","sourcesContent":["import {useState} from 'react';\n\nfunction App() {\n  const[calc, setCalc]= useState(\"\");\n  const [result, setResult]=useState(\"\");\n\n  const ops =['/','*','+','-','.']\n\n  const updateCalc = value =>{\n    if(\n      ops.includes(value) && calc === '' ||\n      ops.includes(value) && ops.includes(calc.slice(-1))\n    ) {\n      return;\n    }\n    setCalc(calc + value);\n    if (!ops.includes(value)){\n      setResult(eval(calc+value).toString());\n    }\n  }\n\n  const creatDigits=()=>{\n    const digits=[];\n    for (let i=1; i<10; i++){\n      digits.push(\n        <button onClick={()=>updateCalc(i.toString())} key={i}>{i}</button>\n      )\n    }\n    return digits;\n  }\n\n\n  const calculate = () =>{\n    setCalc(eval(calc).toString());\n  }\n\n  const cLEAR = () =>{\n    if(calc==\"\"){\n      return\n     }\n     const value =calc.slice(0,-1);\n     setCalc(value);\n   }\n\n  \n\n  return (\n    <div className=\"calculator\">\n      <div className=\"display\">\n       {result ? <span>({result})</span>:''}\n       {calc || \"0\"} \n      </div>\n        <div className=\"operators\">\n          <button onClick={()=>updateCalc('/')}>/</button>\n          <button onClick={()=>updateCalc('')}></button>\n          <button onClick={()=>updateCalc('+')}>+</button>\n          <button onClick={()=>updateCalc('-')}>-</button>\n\n          <button onClick={cLEAR}>DEL</button>\n        </div>\n        <div className=\"digits\">\n        {creatDigits()}\n        <button onClick={()=>updateCalc('0')}>0</button>\n        <button onClick={()=>updateCalc('.')}>.</button>\n        \n        <button onClick={calculate}>=</button>\n\n        </div>\n    </div>\n\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}